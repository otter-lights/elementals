/*
 * Elementals - Rachel
 * this is the form that will ask random question quizzes about the water topic
 */
package elementals;

import java.awt.Color;
import java.text.DecimalFormat;
import java.util.Random;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author rachelroutly
 */
public class water extends javax.swing.JFrame {

    player character;
    home house;
    training train;
    /**
     * Creates new form water
     */
    public water(player c) {
        character = c;
        initComponents();
        //set back ground colouring
        Color train = new Color(255,249,165);
        this.getContentPane().setBackground(train);
        chooseQuestions();
        waterVal.setText(String.valueOf(character.getWater()));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        skipOne = new javax.swing.JButton();
        skipTwo = new javax.swing.JButton();
        skipThree = new javax.swing.JButton();
        questionOne = new javax.swing.JLabel();
        questionTwo = new javax.swing.JLabel();
        questionThree = new javax.swing.JLabel();
        answerOne = new javax.swing.JComboBox<>();
        answerTwo = new javax.swing.JComboBox<>();
        answerThree = new javax.swing.JComboBox<>();
        submitBttn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        waterVal = new javax.swing.JLabel();
        homeBttn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        skipOne.setText("Skip");
        skipOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipOneActionPerformed(evt);
            }
        });

        skipTwo.setText("Skip");
        skipTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipTwoActionPerformed(evt);
            }
        });

        skipThree.setText("Skip");
        skipThree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipThreeActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        questionOne.setText(" --");

        questionTwo.setText(" --");

        questionThree.setText(" --");

        submitBttn.setText("Submit");
        submitBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBttnActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elementals/images/water-icon.png"))); // NOI18N
        jLabel1.setText("  :");

        waterVal.setText("       ");

        homeBttn.setText("Back to Home");
        homeBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBttnActionPerformed(evt);
            }
        });

        jButton1.setText("Skip");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Skip");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Skip");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 527, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(answerThree, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(submitBttn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(homeBttn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(answerTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(answerOne, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(waterVal))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(questionOne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(questionTwo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(questionThree, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(waterVal))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questionOne)
                    .addComponent(answerOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questionTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(answerTwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questionThree)
                    .addComponent(answerThree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(submitBttn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(homeBttn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //variable to track number of correct answers
    int numCorrect = 0;
    //checks which questions were skipped to ensure that points aren't counter twice
    boolean skipped1 = false;
    boolean skipped2 = false;
    boolean skipped3 = false;
    private void submitBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBttnActionPerformed
        //if the selected item is the same as the correct answer at the same index of the correct array the numCorrect increases         
        if((correct[numOne] == answerOne.getSelectedItem()) && skipped1 == false){
            numCorrect++;
        }
        //checks for correct again
        if((correct[numTwo] == answerTwo.getSelectedItem()) && skipped2 == false){
            numCorrect++;
        }
        //checks for correct again
        if((correct[numThree] == answerThree.getSelectedItem()) && skipped3 == false){
            numCorrect++;
        }

        //gets the water value
        double w = character.getWater();
        //creates a new decimal format to save values to two decimals
        DecimalFormat numberFormat = new DecimalFormat("0.0");
        //adds the correct amount to the character's water value
        switch (numCorrect) {
            case 1:
                character.setWater(Double.parseDouble(numberFormat.format(w + 0.3)));
                break;
            case 2:
                character.setWater(Double.parseDouble(numberFormat.format(w + 0.6)));
                break;
            case 3:
                character.setWater(Double.parseDouble(numberFormat.format(w + 1.0)));
                break;
            default:
                break;
        }
        //gives the user a message of how many questions they ansswered correctly
        JOptionPane.showMessageDialog (null, "You Answered " + numCorrect + " Question(s) Correctly", "Not Allowed", JOptionPane.INFORMATION_MESSAGE);
        //closes current form and opens training form
        if(train == null){
            train = new training(character);
        }
        this.setVisible(false);
        train.setVisible(true);
    }//GEN-LAST:event_submitBttnActionPerformed

    private void homeBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBttnActionPerformed
        // closes the current form and opens home form
        if(house == null){
            house = new home(character);
        }    
        this.setVisible(false);
        house.setVisible(true); 
    }//GEN-LAST:event_homeBttnActionPerformed

    private void skipTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipTwoActionPerformed
        //ignore, accidental button creation
    }//GEN-LAST:event_skipTwoActionPerformed

    private void skipOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipOneActionPerformed
        //ignore, accidental button creation
    }//GEN-LAST:event_skipOneActionPerformed

    private void skipThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipThreeActionPerformed
        //ignore, accidental button creation
    }//GEN-LAST:event_skipThreeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // calls the skipQuestion method
        skipQuestion();
        skipped1 = true;
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // calls the skipQuestion method
        skipQuestion();
        skipped2 = true;
        jButton2.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // calls the skipQuestion method
        skipQuestion();
        skipped3 = true;
        jButton3.setEnabled(false);
    }//GEN-LAST:event_jButton3ActionPerformed
    
    //global variables for the question and answer arrays 
    String[] questions = {"The climate is made of five components, which relates to water?", 
                          "Tides on earth are due to which celestial body?", 
                          "How much freshwater is trapped in glaciers?", 
                          "What is the freezing temperature of seawater?", 
                          "In the developing world ____% illnesses is a result of unsanitary water", 
                          "Salt water accounts for ____% of water on earth", 
                          "The average European uses _____ the water that the average American uses", 
                          "2.2 pounds of beef uses about _____ gallons of water",
                          "South African women collectively walk the distance of ____ trips to the moon to collect water",
                          "1 in __ people don’t have access to clean water",
                          "The economic return on $1 invested in water infrastructure in Africa is between ", 
                          "Uncontaminated water has a pH value of", 
                          "4L of gasoline can contaminate _______L during production",
                          "Bottled water can be ____ times as expensive as tap water ",
                          "Nestle (evil corporation) wants to take ____ L of water/day from the middlebrook well"};
    
    String[] correct = {"hydrosphere",
                        "Moon",
                        "69%",
                        "-2 Celcius",
                        "80%",
                        "97",
                        "50%",
                        "4 000",
                        "16",
                        "9",
                        "3-34",
                        "7",
                        "750 000",
                        "2 000",
                        "1.6 Million"};
    
    String[] wrong1 =  {"atmosphere",
                        "Sun",
                        "32%",
                        "0 Celcius",
                        "50%",
                        "80",
                        "75%",
                        "2 000",
                        "2",
                        "3",
                        "5-48",
                        "4",
                        "500 000",
                        "500",
                        "500 000"};
    
    String[] wrong2 =  {"cryosphere",
                        "Mars",
                        "50%",
                        "2 Celcius",
                        "70%",
                        "93",
                        "100%",
                        "3 000",
                        "4",
                        "5",
                        "3-10",
                        "9",
                        "100 000",
                        "5 000",
                        "1 Million"};
    
    String[] wrong3 =  {"biosphere",
                        "Venus",
                        "75%",
                        "-1 Celcius",
                        "90%",
                        "95",
                        "125%",
                        "3 500",
                        "32",
                        "13",
                        "5-25",
                        "20",
                        "125 000",
                        "10 000",
                        "1.8 Million"};
    
    //sets random numbers for 1-3 (used for choosing/finding questions)
    Random rand = new Random(); 
    int numOne = rand.nextInt((15 - 1) + 1) + 1;
    int numTwo = rand.nextInt((15 - 1) + 1) + 1;
    int numThree = rand.nextInt((15 - 1) + 1) + 1;
    
    //chooses three question and calls the random order method
    public void chooseQuestions(){           
        questionOne.setText(questions[numOne]);
        ranOrder(numOne, answerOne);
        
        questionTwo.setText(questions[numTwo]);
        ranOrder(numTwo, answerTwo);
        
        questionThree.setText(questions[numThree]);
        ranOrder(numThree, answerThree);
    }
    
    //randomizes the order of the answers
    public void ranOrder(int n, JComboBox<String> question){
        //makes a random number between 1 and 4, that will indicated which of the four slots the correct answer should be in
        int order = rand.nextInt((4 - 1) + 1) + 1;
        //if it is 1 --> first slot, 2 --> second slot and so on
        if(order <= 1){
            question.addItem(correct[n]);
            question.addItem(wrong1[n]);
            question.addItem(wrong2[n]);
            question.addItem(wrong3[n]);
        }   
        else if(order <= 2){           
            question.addItem(wrong1[n]);
            question.addItem(correct[n]);
            question.addItem(wrong2[n]);
            question.addItem(wrong3[n]);
        } 
        else if(order <= 3){
            question.addItem(wrong1[n]);           
            question.addItem(wrong2[n]);
            question.addItem(correct[n]);
            question.addItem(wrong3[n]);
        }
        else{
            question.addItem(wrong1[n]);            
            question.addItem(wrong2[n]);
            question.addItem(wrong3[n]);
            question.addItem(correct[n]);
        }       
    }
    //handles the clicking of the skip question button
    public void skipQuestion(){
        //gets the XP value of the character
        int xpValue = character.getXP();
        //if they have more than 1 xp, the number of correct answers increases by one, and the xp value drops by 1
        if(xpValue >= 1){
            character.setXP(xpValue - 1);
            numCorrect++;
        }
        //if not they are notified with a pop up message
        else{
            JOptionPane.showMessageDialog (null, "You Don't Have Enough XP to Skip a Question", "Not Allowed", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> answerOne;
    private javax.swing.JComboBox<String> answerThree;
    private javax.swing.JComboBox<String> answerTwo;
    private javax.swing.JButton homeBttn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel questionOne;
    private javax.swing.JLabel questionThree;
    private javax.swing.JLabel questionTwo;
    private javax.swing.JButton skipOne;
    private javax.swing.JButton skipThree;
    private javax.swing.JButton skipTwo;
    private javax.swing.JButton submitBttn;
    private javax.swing.JLabel waterVal;
    // End of variables declaration//GEN-END:variables
}
