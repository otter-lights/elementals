/*
 * Elementals - Rachel
 * this form will take the players login credentials and check if there is a player saved with the
 * same username and password
 */
package elementals;

//imports used for files and color
import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author rachelroutly
 */
public class loginForm extends javax.swing.JFrame {
    //global variables for the referenced forms and character
    start starter;
    home house;
    player character;
    
    public loginForm(start s) {
        initComponents();
        //set background color
        Color logger = new Color(137,2,62);
        this.getContentPane().setBackground(logger);
        starter = s;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        uNameField = new javax.swing.JTextField();
        loginBttn = new javax.swing.JButton();
        pWordField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("Papyrus", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Login");

        jLabel2.setFont(new java.awt.Font("Papyrus", 0, 13)); // NOI18N
        jLabel2.setText("Username:");

        jLabel3.setFont(new java.awt.Font("Papyrus", 0, 13)); // NOI18N
        jLabel3.setText("Password:");

        loginBttn.setText("Login");
        loginBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBttnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(loginBttn)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(uNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(pWordField))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pWordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(loginBttn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBttnActionPerformed
        //gets the values of username and password from the form
        String username = uNameField.getText();
        String password = pWordField.getText();
        //sets the end to false as the end of the document has not been reached
        boolean end = false;
        //sets empty strings for the saved username and password
        String uName = "";
        String pWord = "";
        
        //trys to read from the file
        try{
            //creates file and buffer readers to get data from
            //goes to a file with the naming convention of givenUsername.txt
            FileReader r = new FileReader("src//elementals//character_saves//" + username + ".txt");
            BufferedReader b = new BufferedReader(r);
            
            //reads the first too lines (username and password), saves time if password is wrong
            uName = b.readLine();
            pWord = b.readLine();
            
            //if the password is correct the rest of the document is read and changed to the appropriate data type
            if(pWord.equals(password)){
                String charName = b.readLine();

                String sR = b.readLine();
                String sG = b.readLine();
                String sB = b.readLine();
                
                int iR = Integer.parseInt(sR);
                int iG = Integer.parseInt(sG);
                int iB = Integer.parseInt(sB);
                
                String f = b.readLine();
                String e = b.readLine();
                String i = b.readLine();
                String w = b.readLine();
                
                String sExp = b.readLine();

                Double fire = Double.parseDouble(f);
                Double earth = Double.parseDouble(e);
                Double ice = Double.parseDouble(i);
                Double water = Double.parseDouble(w);
                
                int exp = Integer.parseInt(sExp);
                
                //creates the characters color from the integers for RGB
                Color colour = new Color(iR, iG, iB);

                //creates the character of class player with given values
                character = new player(uName, pWord, charName, iR, iG, iB, fire, earth, ice, water, exp);
                
                if(house == null){
                    house = new home(character);
                }    
                this.setVisible(false); 
                house.setVisible(true);  
            }
            else{
                JOptionPane.showMessageDialog (null, "Login Credentials are Incorrect", "Not Authenticated", JOptionPane.INFORMATION_MESSAGE);

            }
            b.close();
        }
        catch(IOException e){
            System.out.println("User not valid");
        }        
    }//GEN-LAST:event_loginBttnActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton loginBttn;
    private javax.swing.JTextField pWordField;
    private javax.swing.JTextField uNameField;
    // End of variables declaration//GEN-END:variables
}
